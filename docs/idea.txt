temp vscode plugin
option to export to project
templates for projects
option to save one as a template
warning after they close the vscode window about "do you want to save your project" if they haven't already exported it

vscode process is wrapped and tracked by pid in a `~/.letstry` file.
we monitor that process, and when it closes, we ask the user if they want to save their project.

when you create a new project, it creates the directory and opens vscode in that directory.
the user can create a new project with `lt new`, they can specify which template to use.
when you start a new project you can optionally specify a name for the session.
if one is not specified, the pid will be used.
if they do not specify a template, the default template will be used.
the default template can be updated using `lt template default set <template>`
you can check the template default using `lt template default`
you can export templates using `lt template export <template> <path>`
you can import templates using `lt template import <path>`
you can list templates using `lt template list`
you can remove templates using `lt template remove <template>`

you can tag templates with languages, and when you create a new project, you can specify a language, and it will list all templates that match that language.
you can also specify a template when you create a new project, and it will use that template.

to tag a template with a language, you can use `lt template tag <template> <language>`
to remove a tag from a template, you can use `lt template untag <template> <language>`
to list all tags for a template, you can use `lt template tags <template>`
to list all templates for a language, you can use `lt template list <language>`

the default template is default to an empty directory, which in itself is a template called "empty", but the empty
template is baked into the program and cannot be removed.
all other templates can be managed, and you can export, import, or list them.

each vscode process should be tracked, and can be named


you can list sessions with `lt session list` and you will get their name ( if any ), pid, and template.
you can kill a session with `lt session kill <name|pid>`
you can export a session with `lt session export <name|pid> <path>`
you can save a session as a template using `lt session save <name|pid> <template-name>`